{"version":3,"sources":["./src/app/pages/users/users.page.html","./src/app/pages/users/users-routing.module.ts","./src/app/pages/users/users.module.ts","./src/app/pages/users/users.page.scss","./src/app/pages/users/users.page.ts"],"names":[],"mappings":"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","file":"users-users-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title class='title'>Users</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [scrollY]=\\\"false\\\">\\n\\n  <ion-list>\\n\\n    <ion-item *ngFor=\\\"let user of users; let i = index\\\" [color]=\\\"getItemColor(user)\\\">\\n\\n      <ion-avatar class=\\\"user-avatar\\\">\\n        <img [src]=\\\"'./assets/users/' + usersPics[i] + '.svg'\\\">\\n      </ion-avatar>\\n      \\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <ion-text color=\\\"primary\\\">\\n          <h3>{{ user.name }} {{ user.surname }}</h3>\\n        </ion-text>\\n        <p>{{ user.email }}</p>\\n      </ion-label>\\n    \\n    </ion-item>\\n\\n  </ion-list> \\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsersPage } from './users.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsersPageRoutingModule } from './users-routing.module';\n\nimport { UsersPage } from './users.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UsersPageRoutingModule\n  ],\n  declarations: [UsersPage]\n})\nexport class UsersPageModule {}\n","export default \".user-avatar {\\n  margin-right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdXNlcnMvRzpcXFVuaWN0XFxNQVRFUklFIFRFUlpPIEFOTk9cXFNlbWluYXJpbyBwZXIgdGlyb2NpbmlvXFxQcm9nZXR0b1xcUHJvZ2V0dG9QYXJhZGlnbWFcXElvbmljL3NyY1xcYXBwXFxwYWdlc1xcdXNlcnNcXHVzZXJzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvdXNlcnMvdXNlcnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXJzL3VzZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLWF2YXRhciB7IFxuICAgIG1hcmdpbi1yaWdodDogMTBweDsgXG59IiwiLnVzZXItYXZhdGFyIHtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/interfaces/user';\nimport { UsersService } from 'src/app/services/users/users.service';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { ToastService } from 'src/app/shared/toast.service';\nimport { ToastTypes } from 'src/app/enums/toast-types.enum';\nimport { UniLoaderService } from 'src/app/shared/uniLoader.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: ['./users.page.scss'],\n})\nexport class UsersPage implements OnInit {\n\n  users: User[] = [];\n\n  usersPics: number[] = [];\n  private userPicsAvailable = 15;\n\n  constructor(\n    private usersService: UsersService,\n    private auth: AuthService,\n    private toastService: ToastService,\n    private uniLoader: UniLoaderService\n  ) {}\n\n\n\n  async ngOnInit() {\n\n    // Quando carico la pagina, riempio il mio array di Users\n    await this.getUsers();\n\n    // Invoco questa funzione per avere un pool di immagini da utilizzare per la lista utenti\n    this.initUserPicts();\n\n  }\n\n\n\n  async getUsers() {\n\n    try {\n\n      // Avvio il loader\n      await this.uniLoader.show();\n\n      // Popolo il mio array di oggetti 'User' con quanto restituito dalla chiamata API\n      this.users = await this.usersService.getUsers();\n\n    } catch (err) {\n\n      // Nel caso la chiamata vada in errore, mostro l'errore in un toast\n      await this.toastService.show({\n        message: err.message,\n        type: ToastTypes.ERROR\n      });\n\n    }\n\n    // Chiudo il loader\n    await this.uniLoader.dismiss();\n\n  }\n\n\n  // Metodo bindato con l'interfaccia in Angular, per cambiare il colore di un item quando l'utente coincide con l'account connesso\n  getItemColor(user: User): string | null  {\n\n    if (user._id === this.auth.me._id) {\n      return 'light';\n    }\n\n    return null;\n\n  }\n\n\n\n  initUserPicts() {\n\n    // Popolo l'array userPics con numeri random\n    this.users.forEach(_ => {\n      this.usersPics.push(Math.ceil(Math.random() * this.userPicsAvailable));\n    });\n\n  }\n\n\n\n}\n"],"sourceRoot":"webpack:///"}