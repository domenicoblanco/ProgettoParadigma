{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","navCtrl","auth","uniLoader","toastService","loginUser","nextElement","setFocus","navigateForward","show","login","navigateRoot","message","type","ERROR","dismiss","password","length","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,sBAAsB;AAAA;AAAA,KAAnC;;AAAaA,0BAAsB,6DAJlC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIkC,GAAtBH,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,eAAe;AAAA;AAAA,KAA5B;;AAAaA,mBAAe,6DAT3B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,4EAJO,CADD;AAORI,kBAAY,EAAE,CAAC,qDAAD;AAPN,KAAT,CAS2B,GAAfD,eAAe,CAAf;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAaE,SAAS;AAIpB,yBACUC,OADV,EAEUC,IAFV,EAGUC,SAHV,EAIUC,YAJV,EAIoC;AAAA;;AAH1B,aAAAH,OAAA,GAAAA,OAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AANV,aAAAC,SAAA,GAAY,EAAZ;AAOK;;AATe;AAAA;AAAA,sCAWNC,WAXM,EAWO;AACzBA,qBAAW,CAACC,QAAZ;AACD;AAbmB;AAAA;AAAA,qCAeD;;;;;;;AAGjB,2BAAM,KAAKN,OAAL,CAAaO,eAAb,CAA6B,SAA7B,CAAN;;;;;;;;;AAED;AApBmB;AAAA;AAAA,gCAsBN;;;;;;;;AAKV,2BAAM,KAAKL,SAAL,CAAeM,IAAf,EAAN;;;;AAGA,2BAAM,KAAKP,IAAL,CAAUQ,KAAV,CAAgB,KAAKL,SAArB,CAAN;;;;AAGA,2BAAM,KAAKJ,OAAL,CAAaU,YAAb,CAA0B,GAA1B,CAAN;;;;;;;;;;AAKA,2BAAM,KAAKP,YAAL,CAAkBK,IAAlB,CAAuB;AAC3BG,6BAAO,EAAE,aAAIA,OADc;AAE3BC,0BAAI,EAAE,0EAAWC;AAFU,qBAAvB,CAAN;;;;AAQF,2BAAM,KAAKX,SAAL,CAAeY,OAAf,EAAN;;;;;;;;;AAED;AAhDmB;AAAA;AAAA,wCAkDP;AAEX,cAAI,KAAKV,SAAL,CAAeW,QAAnB,EAA6B;AAC3B,mBAAO,KAAKX,SAAL,CAAeW,QAAf,CAAwBC,MAAxB,GAAiC,CAAxC;AACD;;AAED,iBAAO,IAAP;AACD;AAzDmB;;AAAA;AAAA,OAAtB;;;;cAKqB;;cACH;;cACK;;cACG;;;;AARbjB,aAAS,6DALrB,gEAAU;AACTkB,cAAQ,EAAE,WADD;AAETC,cAAQ,EAAR;AAAA;AAAA,gGAFS;;;;AAAA,KAAV,CAKqB,E,+EAKD,4D,EACH,8E,EACK,iF,EACG,yE,EARJ,GAATnB,SAAS,CAAT","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title class='title'>Progetto Paradigma</ion-title>  <!-- Cambiare titolo (mettere il nome che si vuole dare al progetto) -->\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [scrollY]=\\\"false\\\">\\n\\n  <div class=\\\"form__container\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input (keyup.enter)=\\\"gotoNextField(Field)\\\" type=\\\"email\\\" [(ngModel)]=\\\"loginUser.email\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input #Field (keyup.enter)=\\\"login()\\\" minlength=\\\"5\\\" type=\\\"password\\\" [(ngModel)]=\\\"loginUser.password\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-row>\\n      <ion-col>\\n        <ion-button [disabled]=\\\"isDataInvalid()\\\" fill=\\\"solid\\\" (click)=\\\"login()\\\">Login</ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-button fill=\\\"solid\\\" (click)=\\\"goToSignup()\\\">Create account</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </div>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { Login } from 'src/app/interfaces/login';\nimport { UniLoaderService } from 'src/app/shared/uniLoader.service';\nimport { ToastService } from 'src/app/shared/toast.service';\nimport { ToastTypes } from 'src/app/enums/toast-types.enum';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n\n  loginUser = {} as Login;\n\n  constructor(\n    private navCtrl: NavController,\n    private auth: AuthService,\n    private uniLoader: UniLoaderService,\n    private toastService: ToastService\n  ) { }\n\n  gotoNextField(nextElement) {\n    nextElement.setFocus();\n  }\n\n  async goToSignup() {\n\n    // Navigo l'utente sulla pagina signup\n    await this.navCtrl.navigateForward('/signup');\n\n  }\n\n  async login() {\n\n    try {\n\n      // Avvio il loader in attesa che venga risolta la promise (mostra un indicator activity)\n      await this.uniLoader.show();\n\n      // Effettuo la chiamata login\n      await this.auth.login(this.loginUser);\n\n      // Se la chiamata Ã¨ andata buon fine, porto l'utente sulla schermata Tabs\n      await this.navCtrl.navigateRoot('/');\n\n    } catch (err) {\n\n      // Nel caso la chiamata vada in errore, mostro l'errore in un toast\n      await this.toastService.show({\n        message: err.message,\n        type: ToastTypes.ERROR\n      });\n\n    }\n\n    // Chiudo il loader\n    await this.uniLoader.dismiss();\n\n  }\n\n  isDataInvalid(): boolean {\n\n    if (this.loginUser.password) {\n      return this.loginUser.password.length < 5;\n    }\n\n    return true;\n  }\n\n}\n"]}